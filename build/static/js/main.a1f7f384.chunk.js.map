{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","fileInput","useRef","useState","data","setData","tableData","setTableData","isTableShow","setIsTableShow","modal","setModal","useEffect","firstFiltration","map","el","i","fullName","value","trim","valid","phone","length","email","toLowerCase","age","experience","yearlyIncome","Math","floor","Number","hasChildren","licenseStates","split","state","states","find","name","console","log","abbreviation","join","expirationDate","licenseNumber","id","dublicateWith","row","self","Object","entries","forEach","key","test","every","moment","isValid","isAfter","Date","startsWith","validate","dublicate","isTableIncorrect","className","type","accept","ref","onChange","current","files","reader","FileReader","readAsText","onload","loadedFile","csv","fromString","target","result","then","parsedCSV","Table","clsx","Modal","isOpen","toggle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1f7f384.chunk.js","sourcesContent":["import './App.css';\nimport { useRef, useState, useEffect } from 'react'\nimport * as csv from \"csvtojson\"\nimport states from './states.json'\nimport moment from 'moment'\nimport { Modal, Table } from 'reactstrap';\nimport clsx from 'clsx';\n\nfunction App() {\n  const fileInput = useRef();\n  const [data, setData] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [isTableShow, setIsTableShow] = useState(false);\n  const [modal, setModal] = useState(false);\n  const toggleIncorrectData = () => setModal(!modal);\n\n  const validate = (name, value, row) => {\n    switch (name) {\n      case 'age':\n        return /^\\d+$/.test(value) && value >= 21\n      case 'experience':\n        return value <= row.age.value && value >= 0\n      case 'yearlyIncome':\n        return value <= 1000000 && value >= 0\n      case 'licenseStates':\n        return value.split('|').every(name => states.find(el => el.name === name || el.abbreviation === name))\n      case 'expirationDate':\n        return moment(value, ['YYYY-MM-DD', 'MM/DD/YYYY'], true).isValid() && moment(value).isAfter(new Date())\n      case 'phone':\n        return (value.startsWith('+1') && value.length === 12) || (value.startsWith('1') && value.length === 11) || (value.length === 10)\n      case 'hasChildren':\n        return value === 'TRUE' || value === 'FALSE' || value === ''\n      case 'licenseNumber':\n        return /^[0-9a-zA-Z]{6}$/.test(value)\n      case 'email':\n        return /^\\S+@\\S+.\\S+$/.test(value)\n      case 'fullName':\n        return !!value\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    const firstFiltration = data.map((el, i) => {\n      return {\n        fullName: { value: el[\"Full Name\"].trim(), valid: '' },\n        phone: { value: el[\"Phone\"].trim().length === 10 ? '+1' + el[\"Phone\"].trim().length : el[\"Phone\"].trim().length === 11 ? '+' + el[\"Phone\"].trim() : el[\"Phone\"].trim(), valid: '' },\n        email: { value: el[\"Email\"].trim().toLowerCase(), valid: '' },\n        age: { value: el[\"Age\"].trim(), valid: '' },\n        experience: { value: el[\"Expierence\"].trim(), valid: '' },\n        yearlyIncome: { value: Math.floor(Number(el[\"Yearly Income\"].trim()) * 100) / 100, valid: '' },\n        hasChildren: { value: el[\"Has children\"].trim(), valid: '' },\n        licenseStates: {\n          value: el[\"License states\"]\n            .trim()\n            .split('|')\n            .map(el => {\n              const state = states.find(state => state.name === el);\n              console.log(el);\n              return state ? state.abbreviation : el\n            })\n            .join('|'), valid: ''\n        },\n        expirationDate: { value: el[\"Expiration date\"].trim(), valid: '' },\n        licenseNumber: { value: el[\"License number\"].trim(), valid: '' },\n        id: { value: i + 1 },\n        dublicateWith: { value: null }\n      }\n    }).map((row, i, self) => {\n      Object.entries(row).forEach(([key, value]) => row[key].valid = validate(key, value.value, row))\n      const dublicate = self.find(el => {\n        return (row.phone.value === el.phone.value || row.email.value === el.email.value) && el.id.value !== row.id.value\n      })\n      row.dublicateWith.value = dublicate && dublicate.id.value\n      return row\n    })\n\n\n    const isTableIncorrect = firstFiltration.find(el => {\n      return el.phone.value === '' || el.email.value === '' || el.fullName.value === ''\n    })\n    if (data.length) {\n      isTableIncorrect ? setModal(true) : setIsTableShow(true);\n      setTableData(firstFiltration);\n    }\n\n    console.log(isTableShow);\n  }, [data])\n\n  const handleChange = () => {\n    if (fileInput.current.files[0]) {\n      const reader = new FileReader();\n      reader.readAsText(fileInput.current.files[0], \"UTF-8\");\n      reader.onload = function (loadedFile) {\n        csv().fromString(loadedFile.target.result).then((parsedCSV) => {\n          setData(parsedCSV)\n        })\n      }\n    }\n  }\n  return (\n    <div className=\"App\">\n      <span className=\"attention\">Note that you can only load <b>.csv</b> files!</span>\n      <input className=\"input\" type=\"file\" accept=\".csv\" ref={fileInput} onChange={handleChange}></input>\n\n      {isTableShow ?\n        <Table>\n          <thead className=\"tableHead\">\n            <tr>\n              <th>ID</th>\n              <th>Full Name</th>\n              <th>Phone</th>\n              <th>Email</th>\n              <th>Age</th>\n              <th>Experience</th>\n              <th>Yearly Income</th>\n              <th>Has children</th>\n              <th>License states</th>\n              <th>Expiration date</th>\n              <th>License number</th>\n              <th>Dublicate with</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableData.map((el, i) => <tr key={i}>\n              <th>{el.id.value}</th>\n              <th className={clsx({ 'red': !el.fullName.valid })}>{el.fullName.value}</th>\n              <th className={clsx({ 'red': !el.phone.valid })}>\n                {el.phone.value}\n              </th>\n              <th className={clsx({ 'red': !el.email.valid })}>\n                {el.email.value}\n              </th>\n              <th className={clsx({ 'red': !el.age.valid })}>\n                {el.age.value}\n              </th>\n              <th className={clsx({ 'red': !el.experience.valid })}>\n                {el.experience.value}\n              </th>\n              <th className={clsx({ 'red': !el.yearlyIncome.valid })}>\n                {el.yearlyIncome.value}\n              </th>\n              <th className={clsx({ 'red': !el.hasChildren.valid })}>\n                {el.hasChildren.value}\n              </th>\n              <th className={clsx({ 'red': !el.licenseStates.valid })}>\n                {el.licenseStates.value}\n              </th>\n              <th className={clsx({ 'red': !el.expirationDate.valid })}>\n                {el.expirationDate.value}\n              </th>\n              <th className={clsx({ 'red': !el.licenseNumber.valid })}>\n                {el.licenseNumber.value}\n              </th>\n              <th>\n                {el.dublicateWith.value}\n              </th>\n            </tr>)}\n          </tbody>\n        </Table> : <span>Upload CSV File!</span>}\n      <Modal isOpen={modal} toggle={toggleIncorrectData}>\n        <div>Data is not correct!</div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}